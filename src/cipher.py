# encode = {
#     # u'А': u'!s3@',
#     # u'Б': u'4$&)',
#     # u'В': u'?1s0',
#     # u'Г': u'4%,>',
#     # u'Д': u'=_8h',
#     # u'Е': u'7Z*(',
#     # u'Ё': u'b~2L',
#     # u'Ж': u'*4Ci',
#     # u'З': u'Pc*9',
#     # u'И': u'@B&v',
#     # u'Й': u'/rX7',
#     # u'К': u'0^`x',
#     # u'Л': u'Q3$m',
#     # u'М': u'(4%c',
#     # u'Н': u'Bc&8',
#     # u'О': u',Mu(',
#     # u'П': u'&cK*',
#     # u'Р': u'**cL',
#     # u'С': u'@2#X',
#     # u'Т': u'+9Cc',
#     # u'У': u'7cC)',
#     # u'Ф': u']{c9',
#     # u'Х': u']](8',
#     # u'Ц': u'ByC*',
#     # u'Ч': u'syKa',
#     # u'Ш': u'h&c}',
#     # u'Щ': u'I7^^',
#     # u'Ъ': u'0J8&',
#     # u'Ы': u'}}7C',
#     # u'Ь': u'*cN/',
#     # u'Э': u'`~ue`',
#     # u'Ю': u'Yuc&',
#     # u'Я': u':lc^',
#     u'а': u'!',
#     u'б': u'4',
#     u'в': u'?',
#     u'г': u'$',
#     u'д': u'=',
#     u'е': u'7',
#     u'ё': u'b',
#     u'ж': u'*',
#     u'з': u'P',
#     u'и': u'@',
#     u'й': u'/',
#     u'к': u'0',
#     u'л': u'Q',
#     u'м': u'(',
#     u'н': u'B',
#     u'о': u',',
#     u'п': u'&',
#     u'р': u'8',
#     u'с': u'#',
#     u'т': u'+',
#     u'у': u'.',
#     u'ф': u']',
#     u'х': u'{',
#     u'ц': u'y',
#     u'ч': u's',
#     u'ш': u'h',
#     u'щ': u'I',
#     u'ъ': u'J',
#     u'ы': u'}',
#     u'ь': u'N',
#     u'э': u'~',
#     u'ю': u'Y',
#     u'я': u':',
#     u' ': u'^',
# }
#
# decode = {
#     u'!': u'а',
#     u'4': u'б',
#     u'?': u'в',
#     u'$': u'г',
#     u'=': u'д',
#     u'7': u'е',
#     u'b': u'ё',
#     u'*': u'ж',
#     u'P': u'з',
#     u'@': u'и',
#     u'/': u'й',
#     u'0': u'х',
#     u'Q': u'л',
#     u'(': u'м',
#     u'B': u'н',
#     u',': u'о',
#     u'&': u'п',
#     u'8': u'р',
#     u'#': u'с',
#     u'+': u'т',
#     u'.': u'у',
#     u']': u'ф',
#     u'{': u'х',
#     u'y': u'ц',
#     u's': u'ч',
#     u'h': u'ш',
#     u'I': u'щ',
#     u'J': u'ъ',
#     u'}': u'ы',
#     u'N': u'ь',
#     u'~': u'э',
#     u'Y': u'ю',
#     u':': u'я',
#     u'^': u' ',
# }

from cryptography.fernet import Fernet


def write_key():
    key = Fernet.generate_key()
    with open('crypto_key', 'wb') as key_file:
        key_file.write(key)
